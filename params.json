{"name":"DCPU-16 Emulator","body":"## DCPU-16 Emulator v1.7\r\n\r\n### Download (Windows Installer)\r\n\r\nSee the downloads page:\r\n\r\nhttps://github.com/fogleman/DCPU-16/downloads\r\n\r\n### Implemented Specifications\r\n\r\n- DCPU-16 1.7: http://pastebin.com/raw.php?i=Q4JvQvnM\r\n- LEM1802: http://dcpu.com/highnerd/rc_1/lem1802.txt\r\n- Generic Keyboard: http://dcpu.com/highnerd/rc_1/keyboard.txt\r\n- Generic Clock: http://dcpu.com/highnerd/rc_1/clock.txt\r\n\r\n### Screenshots\r\n\r\n![](https://raw.github.com/fogleman/DCPU-16/master/screenshots/debug.png)\r\n\r\n![](https://raw.github.com/fogleman/DCPU-16/master/screenshots/syntax.png)\r\n\r\n![](https://raw.github.com/fogleman/DCPU-16/master/screenshots/nyan.gif)\r\n\r\n### Assembler Features\r\n\r\n```dasm\r\n; Macros (can be nested)\r\n#macro BRK { NOP } ; ignore breakpoints\r\n\r\n#macro push(x) {\r\n  SET PUSH x\r\n}\r\n\r\n; String Literals\r\nDAT \"Here is some text.\", 0 ; null-terminated string\r\n\r\n; Reserve block of memory\r\nRESERVE 0xff\r\n\r\n; Character Literals\r\nSET A 'a' ; A = 0x61\r\nSET B 'A' ; B = 0x41\r\n\r\n; Negative Numbers\r\nSET A -1    ; A = 0xffff\r\nSET B -0xff ; B = 0xff01\r\n\r\n; Breakpoints\r\nBRK\r\n\r\n; Opcode Aliases\r\nSET A POP\r\nSET A [SP++] ; equivalent to POP\r\n\r\nSET PUSH A\r\nSET [--SP] A ; equivalent to PUSH\r\n\r\nSET A PICK 1\r\nSET A [SP + 1] ; equivalent to PICK 1\r\n\r\nSET A PEEK\r\nSET A [SP] ; equivalent to PEEK\r\n\r\n; Local Labels\r\n:prefix\r\n  SET A 10\r\n:.loop ; becomes prefix.loop\r\n  SUB A 1\r\n  IFE A 0\r\n    SET PC .done\r\n  SET PC .loop\r\n:.done ; becomes prefix.done\r\n\r\n; Fixed Labels\r\n:screen @ 0x8000\r\n```\r\n\r\n### Hardware Enumeration\r\n\r\nThe following code enumerates available hardware devices and populates the variables lem, keyboard and clock with their respective hardware identifiers.\r\n\r\n```dasm\r\n#macro match_hardware(a, b, location) {\r\n    IFE A a\r\n    IFE B b\r\n    SET [location] I\r\n}\r\n\r\nJSR enumerate_hardware\r\n\r\n; now you can use the devices, e.g.\r\nSET A 0\r\nSET B 0x8000\r\nHWI [lem]\r\n\r\nBRK\r\n\r\n:enumerate_hardware\r\nHWN I\r\n:.loop\r\nIFE I 0\r\nSET PC .done\r\nSUB I 1\r\nHWQ I\r\nmatch_hardware(0xf615, 0x7349, lem)\r\nmatch_hardware(0x7406, 0x30cf, keyboard)\r\nmatch_hardware(0xb402, 0x12d0, clock)\r\nSET PC .loop\r\n:.done\r\nSET PC POP\r\n\r\n:lem\r\nDAT -1\r\n:keyboard\r\nDAT -1\r\n:clock\r\nDAT -1\r\n```\r\n\r\n### Benchmarks\r\n\r\n    Usage: python benchmark.py\r\n\r\nRun benchmarks on the emulator to test performance.\r\n\r\nMacBook Air (1.7 GHz Intel Core i5)\r\n\r\n    Benchmarking \"C\" emulator using \"programs/life.dasm\"...\r\n    Result: 88728989 cycles per second\r\n\r\nThe C implementation could emulate over 800 DCPU-16 processors at their 100 kHz clock rate.\r\n\r\n### Pretty Print\r\n\r\n    Usage: python assembler.py programs/example.dasm > pretty_output.dasm\r\n\r\nAssemble and output in pretty format. Shows machine code in comments. Comments from the input file are not retained.\r\n\r\n```dasm\r\n    SET A, 48                   ; 7c01 0030\r\n    SET [0x1000], 32            ; 7de1 1000 0020\r\n    SUB A, [0x1000]             ; 7803 1000\r\n    IFN A, 16                   ; c00d\r\n        SET PC, crash           ; 7dc1 001a\r\n    SET I, 10                   ; a861\r\n    SET A, 0x2000               ; 7c01 2000\r\n:loop\r\n    SET [I + 0x2000], [A]       ; 2161 2000\r\n    SUB I, 1                    ; 8463\r\n    IFN I, 0                    ; 806d\r\n        SET PC, loop            ; 7dc1 000d\r\n    SET X, 4                    ; 9031\r\n    JSR testsub                 ; 7c10 0018\r\n    SET PC, crash               ; 7dc1 001a\r\n:testsub\r\n    SHL X, 4                    ; 9037\r\n    SET PC, POP                 ; 61c1\r\n:crash\r\n    SET PC, crash               ; 7dc1 001a\r\n```\r\n\r\n### Dependencies\r\n- **Python 2.5+**: http://www.python.org/\r\n- **PLY**: http://www.dabeaz.com/ply/\r\n- **wxPython**: http://www.wxpython.org/\r\n","tagline":"DCPU-16 Emulator written in Python and C.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}