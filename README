Python scripts for DCPU-16 emulation. Work in progress!

Script output for Notch's sample program:

0001: SET A, 0x0030
0004: SET 0x1000, 0x0020
0006: SUB A, 0x1000
0007: IFN A, 0x0010
000a: SET I, 0x000a
000c: SET A, 0x2000
000e: SET [I + 0x2000], [A]
000f: SUB I, 0x0001
0010: IFN I, 0x0000
0012: SET PC, 0x000d
000e: SET [I + 0x2000], [A]
000f: SUB I, 0x0001
0010: IFN I, 0x0000
0012: SET PC, 0x000d
000e: SET [I + 0x2000], [A]
000f: SUB I, 0x0001
0010: IFN I, 0x0000
0012: SET PC, 0x000d
000e: SET [I + 0x2000], [A]
000f: SUB I, 0x0001
0010: IFN I, 0x0000
0012: SET PC, 0x000d
000e: SET [I + 0x2000], [A]
000f: SUB I, 0x0001
0010: IFN I, 0x0000
0012: SET PC, 0x000d
000e: SET [I + 0x2000], [A]
000f: SUB I, 0x0001
0010: IFN I, 0x0000
0012: SET PC, 0x000d
000e: SET [I + 0x2000], [A]
000f: SUB I, 0x0001
0010: IFN I, 0x0000
0012: SET PC, 0x000d
000e: SET [I + 0x2000], [A]
000f: SUB I, 0x0001
0010: IFN I, 0x0000
0012: SET PC, 0x000d
000e: SET [I + 0x2000], [A]
000f: SUB I, 0x0001
0010: IFN I, 0x0000
0012: SET PC, 0x000d
000e: SET [I + 0x2000], [A]
000f: SUB I, 0x0001
0010: IFN I, 0x0000
0013: SET X, 0x0004
0015: JSR 0x0018
0018: SHL X, 0x0004
0019: SET PC, POP
0017: SET PC, 0x001a
001a: BRK A
PC = 0x1b
SP = 0x0
A = 0x2000
B = 0x0
C = 0x0
X = 0x40
Y = 0x0
Z = 0x0
I = 0x0
J = 0x0
